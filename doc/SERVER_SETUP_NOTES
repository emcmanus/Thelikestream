Some documentation of the server setup process

	[ SSH ]

Server located at 184.106.218.75 : 2298	(NON-STANDARD PORT!)

ssh -p 2298 emcmanus@184.106.218.75



	[ Followed these articles for server setup: ]

http://articles.slicehost.com/2009/5/13/capistrano-series-setting-up-your-slice-2
http://articles.slicehost.com/2008/4/25/ubuntu-hardy-setup-page-1 (user accounts, firewall, ssh config)
http://articles.slicehost.com/2008/4/25/ubuntu-hardy-setup-page-2 (mostly bash config, introduction to free)
http://articles.slicehost.com/2009/5/13/capistrano-series-setting-up-git (making a git repository on the server)
More: http://articles.slicehost.com/rails


	[ Highlights: ]

- created new usergroup "wheel"
- created new user "emcmanus" - USE THIS USER FOR ADMINISTRATIVE TASKS
- Still allow password authentication in SSH
- Using apache, passenger


	[ MySQL: ]

MySQL root user DOES require a password. It's s3rv3rp455
MySQL Socket is located at /var/run/mysqld/mysqld.sock


    [ Varnish: ]

Setup information from here: http://serverfault.com/questions/111678/how-to-setup-apache-passenger-with-varnish
Edited /etc/apache2/ports.conf, /etc/apache2/sites-enabled/likestream
Enabled the Expires module (with: a2enmod expires)
Enabled the Headers module (with: a2enmod headers)
Apache now listens on port 8000, varnish on 80.
Varnish config file: /etc/varnish/default.vcl
To start: sudo varnishd -f /etc/varnish/default.vcl -s malloc,64M -a 0.0.0.0:80


	[ Apache: ]

Config located in /etc/apache2/apache2.conf

	
	[ DNS ]
	
Setup through slicehost management panel
43200 TTL
http://articles.slicehost.com/2007/10/24/creating-dns-records
Info on redirects/rewrites: http://www.webmasterworld.com/apache/3223535.htm


	[ SliceHost Management Panel ]

https://manage.slicehost.com/


	[ Important Paths: ]

Rails app:                                          /home/emcmanus/rails_apps/likestream
MySQL socket:                                       /var/run/mysqld/mysqld.sock
Apache's init.d:                                    /etc/init.d/apache2
Apache Configuration:                               /etc/apache2/sites-available/likestream
Cron jobs (like the future submission dequeue):     /etc/cron.fifteen/
Firewall Rules:                                     /etc/iptables.up.rules
mkmf.log: This is located in the gem's folder. Ex, nokogiri: /usr/lib/ruby/gems/1.8/gems/nokogiri-1.4.3.1 -> Then do find . -name "mkmf.log" to find the path


	[ Sinatra: ]
	
You're running a sinatra server on port 48737! To start, cd into ~/sinatra_apps and run:
ruby daemonizer.rb start


	[ Reminders: ]

Example site config with Passenger:

http://articles.slicehost.com/2008/5/1/ubuntu-hardy-using-mod_rails-to-serve-your-application

When running rake, always check $RAILS_ENV

RAILS_ENV=production
(I added this to bashrc)



